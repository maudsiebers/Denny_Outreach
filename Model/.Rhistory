sim_folder <- file.path('C:/Users/ms128/Denny_Outreach/Model')
shiny::runApp()
runApp()
sim_folder <- file.path('C:/Users/ms128/Denny_Outreach/Model')
Original <- get_var(file = paste0(sim_folder,'/Output/Prediction_Original.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
Original$org <- rowMeans(Original[,2:5], na.rm = TRUE)
Original$DateTime <- as.Date(Original$DateTime)
avg_chl_new <- get_var(file = paste0(sim_folder,'/Output/Prediction_Test_Maud.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
avg_chl_new$avg <- rowMeans(avg_chl_new[,2:5], na.rm = TRUE)
avg_chl_new$DateTime <- as.Date(avg_chl_new$DateTime)
chlplot <- data.frame(date = Original$DateTime, original = Original$org, prediction = avg_chl_new$avg)
chlplot <- reshape2::melt(chlplot, id = c('date'))
# draw the histogram with the specified number of bins
ggplot(chlplot, aes(date, value, col = variable))+
geom_line()+
theme(plot.title = element_text(size = 30), legend.title = element_blank(),
axis.title.y = element_text(size = 20), legend.text = element_text(size = 20))+
xlab(label = '') + ylab(label = 'Total Chla (ug/L)')+
geom_hline(yintercept = 35, col='red')
runApp()
runApp()
###############################################################################
####run the model
file.copy(glm_template, 'glm3.nml', overwrite = TRUE)
#### model things
setwd(sim_folder)
glm_template = 'glm3_prediction.nml'
eg_nml <- read_nml(nml_file = glm_template)
### name output
eg_nml <- set_nml(eg_nml, 'out_fn', paste0('Prediction_new'))
##### temp
eg_nml <- set_nml(eg_nml, 'at_factor', Temp)
phos <-
Nitrate <-
Silica <-
Temp <- input$Temperature
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
sim_folder <- file.path('C:/Users/ms128/Denny_Outreach/Model')
Original <- get_var(file = paste0(sim_folder,'/Output/Prediction_Original.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
Original$org <- rowMeans(Original[,2:5], na.rm = TRUE)
Original$DateTime <- as.Date(Original$DateTime)
avg_chl_new <- get_var(file = paste0(sim_folder,'/Output/Prediction_new.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
avg_chl_new$avg <- rowMeans(avg_chl_new[,2:5], na.rm = TRUE)
avg_chl_new$DateTime <- as.Date(avg_chl_new$DateTime)
chlplot <- data.frame(date = Original$DateTime, original = Original$org, prediction = avg_chl_new$avg)
chlplot <- reshape2::melt(chlplot, id = c('date'))
# draw the histogram with the specified number of bins
ggplot(chlplot, aes(date, value, col = variable))+
geom_line()+
theme(plot.title = element_text(size = 30), legend.title = element_blank(),
axis.title.y = element_text(size = 20), legend.text = element_text(size = 20))+
xlab(label = '') + ylab(label = 'Total Chla (ug/L)')+
geom_hline(yintercept = 35, col='red')
View(chlplot)
View(chlplot)
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
sim_folder <- file.path('C:/Users/ms128/Denny_Outreach/Model')
Original <- get_var(file = paste0(sim_folder,'/Output/Prediction_Original.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
Original$org <- rowMeans(Original[,2:5], na.rm = TRUE)
Original$DateTime <- as.Date(Original$DateTime)
avg_chl_new <- get_var(file = paste0(sim_folder,'/Output/Prediction_new.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
avg_chl_new$avg <- rowMeans(avg_chl_new[,2:5], na.rm = TRUE)
avg_chl_new$DateTime <- as.Date(avg_chl_new$DateTime)
chlplot <- data.frame(date = Original$DateTime, original = Original$org, prediction = avg_chl_new$avg)
chlplot <- reshape2::melt(chlplot, id = c('date'))
# draw the histogram with the specified number of bins
ggplot(chlplot, aes(date, value, col = variable))+
geom_line()+
theme(plot.title = element_text(size = 30), legend.title = element_blank(),
axis.title.y = element_text(size = 20), legend.text = element_text(size = 20))+
xlab(label = '') + ylab(label = 'Total Chla (ug/L)')+
geom_hline(yintercept = 35, col='red')
#### changing parameters
output$CHLA <- renderPlot({
print(input$run_model)
if(input$run_model == 0){
return()
}
phos <-
Nitrate <-
Silica <-
Temp <- input$Temp
#
#
#
#
#
# #### model things
setwd(sim_folder)
glm_template = 'glm3_prediction.nml'
eg_nml <- read_nml(nml_file = glm_template)
### name output
eg_nml <- set_nml(eg_nml, 'out_fn', paste0('Prediction_new'))
##### temp
eg_nml <- set_nml(eg_nml, 'at_factor', Temp)
##### write to file
write_nml(eg_nml, file = glm_template)
# ###############################################################################
# ####run the model
file.copy(glm_template, 'glm3.nml', overwrite = TRUE)
nml_file <- file.path(sim_folder, 'glm3.nml')
GLM3r::run_glm(sim_folder, nml_file = 'glm3.nml', verbose = T)
sim_folder <- file.path('C:/Users/ms128/Denny_Outreach/Model')
Original <- get_var(file = paste0(sim_folder,'/Output/Prediction_Original.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
Original$org <- rowMeans(Original[,2:5], na.rm = TRUE)
Original$DateTime <- as.Date(Original$DateTime)
avg_chl_new <- get_var(file = paste0(sim_folder,'/Output/Prediction_new.nc'),
var_name = 'PHY_TCHLA',
reference = 'surface',
z_out = 0:5)
avg_chl_new$avg <- rowMeans(avg_chl_new[,2:5], na.rm = TRUE)
avg_chl_new$DateTime <- as.Date(avg_chl_new$DateTime)
chlplot <- data.frame(date = Original$DateTime, original = Original$org, prediction = avg_chl_new$avg)
chlplot <- reshape2::melt(chlplot, id = c('date'))
# draw the histogram with the specified number of bins
ggplot(chlplot, aes(date, value, col = variable))+
geom_line()+
theme(plot.title = element_text(size = 30), legend.title = element_blank(),
axis.title.y = element_text(size = 20), legend.text = element_text(size = 20))+
xlab(label = '') + ylab(label = 'Total Chla (ug/L)')+
geom_hline(yintercept = 35, col='red')
})
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
# AED
aed_template = 'aed2Esth.nml'
aed_nml <- read_nml(nml_file = aed_template)
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
# AED
aed_template = 'aed2Esth.nml'
aed_nml <- read_nml(nml_file = aed_template)
aed_nml
# AED
inflow <- read.csv(InflowEst.csv)
# AED
inflow <- read.csv('InflowEst.csv')
View(inflow)
write.csv2(inflow, 'InflowEst.csv')
# AED
inflow <- read.csv('InflowEst.csv')
write.csv(inflow, 'InflowEst.csv')
write.csv(inflow, 'InflowEst.csv', row.names = FALSE)
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
# AED
inflow <- read.csv('InflowEst.csv')
inflow$NIT_amm <- inflow$NIT_amm * Nitrate
inflow$NIT_amm <- inflow$NIT_amm * 1
write.csv(inflow, 'InflowEst_new.csv', row.names = FALSE)
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
write.csv2(inflow, 'InflowEst_new.csv', row.names = FALSE)
write.csv2(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ',')
write.csv(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ',')
write.csv(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ' ')
write.csv2(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ' ')
write_csv2(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ' ')
# ###############################################################################
# ####run the model
file.copy(glm_template, 'glm3.nml', overwrite = TRUE)
write_csv2(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ' ')
write_csv(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ' ')
library(readr)
write_csv(inflow, 'InflowEst_new.csv', row.names = FALSE, sep = ' ')
write_csv(inflow, 'InflowEst_new.csv')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
library(shineycustomloader)
library(shinycustomloader)
install.packages('shinycustomloader')
library(shinycustomloader)
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
runApp('C:/Users/ms128/Denny_Outreach/Shiney_App/Model_Danny_app')
